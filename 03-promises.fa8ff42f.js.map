{"mappings":"AASaA,SAASC,cAAc,SACrBD,SAASC,cAAc,UACxBD,SAASC,cAAc,UACxBD,SAASC,cAAc,SACrBD,SAASC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst form = document.querySelector(\".form\");\nconst button = document.querySelector(\"button\");\nconst delay = document.querySelector(\".delay\");\nconst step = document.querySelector(\".step\");\nconst amount = document.querySelector(\".amount\")\n\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію\n// createPromise(position, delay) стільки разів, скільки ввели в\n// поле amount.Під час кожного виклику передай їй номер промісу(position),\n//   що створюється, і затримку, враховуючи першу затримку(delay), введену\n// користувачем, і крок(step).\n\n// Доповни код функції createPromise таким чином,\n//   щоб вона повертала один проміс, який виконується або\n//    відхиляється через delay часу.Значенням промісу повинен бути\n//     об'єкт, в якому будуть властивості position і delay зі значеннями\n//      однойменних параметрів.Використовуй початковий код функції для\n//       вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// Бібліотека повідомлень (не обов'язковий)\n\n// Для відображення повідомлень користувачеві,\n//   замість console.log(), використовуй бібліотеку notiflix.\n\n"],"names":["document","querySelector"],"version":3,"file":"03-promises.fa8ff42f.js.map"}