{"mappings":"AAEA,MAAMA,EAAOC,SAASC,cAAc,SAE9BC,GADSF,SAASC,cAAc,UACpBD,SAASC,cAAc,WACnCE,EAAWH,SAASC,cAAc,SAClCG,EAAaJ,SAASC,cAAc,WAE1C,IAAII,EACAC,EACAC,EAmBJ,SAASC,EAAcC,EAAUC,GAC/BC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACI,IAAIG,SAASC,IAC3BC,aAAY,KAEVD,EAAQ,CAAEE,SAAAP,EAAUQ,MAAAP,GAAQ,GAC5B,GACDA,GAUKQ,MAAK,EAAGF,SAAAG,EAAUF,MAAAG,MACxBT,QAAQC,IAAI,uBAAqBO,QAAiBC,MAAU,IAE7DC,OAAM,EAAGL,SAAAM,EAAUL,MAAAM,MAClBZ,QAAQC,IAAI,sBAAoBU,QAAiBC,MAAU,G,CAtC/DxB,EAAKyB,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAENpB,EAAQqB,OAAOzB,EAAU0B,OACzBrB,EAASoB,OAAOvB,EAAWwB,OAC3BC,KAAOF,OAAOxB,EAASyB,OAEvB,IAAK,IAAIE,EAAI,EAAGA,EAAIvB,EAAQuB,GAAK,EAC/BzB,EAAWyB,EACXtB,EAAcH,EAAUC,GACxBA,GAASuB,I","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nconst form = document.querySelector(\".form\");\nconst button = document.querySelector(\"button\");\nconst delayForm = document.querySelector(\".delay\");\nconst stepForm = document.querySelector(\".step\");\nconst amountForm = document.querySelector(\".amount\")\n\nlet position;\nlet delay;\nlet amount;\n  \n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  delay = Number(delayForm.value);\n  amount = Number(amountForm.value);\n  step = Number(stepForm.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    position = i\n    createPromise(position, delay)\n    delay += step \n  }\n   \n});\n\n\nfunction createPromise(position, delay) {\n  console.log(position)\n  console.log(delay);\n  const promise = new Promise((resolve) => {\n    setInterval(() => {\n    // resolve({\"position\" : position, \"delay\": delay})\n      resolve({ position, delay })\n    })\n  }, delay)\n\n//  const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n\n\n  promise.then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n};\n\n\n\n\n//!----------------------------------------------\n\n// Доповни код функції createPromise таким чином,\n//   щоб вона повертала один проміс, який виконується або\n//    відхиляється через delay часу.Значенням промісу повинен бути\n//     об'єкт, в якому будуть властивості position і delay зі значеннями\n//      однойменних параметрів.Використовуй початковий код функції для\n//       вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// Бібліотека повідомлень (не обов'язковий)\n\n// Для відображення повідомлень користувачеві,\n//   замість console.log(), використовуй бібліотеку notiflix.\n\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayForm","$47d4ff9957288465$var$stepForm","$47d4ff9957288465$var$amountForm","$47d4ff9957288465$var$position","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","console","log","Promise","resolve","setInterval","position","delay","then","position2","delay2","catch","position3","delay3","addEventListener","event","preventDefault","Number","value","step","i"],"version":3,"file":"03-promises.b30bd7a3.js.map"}